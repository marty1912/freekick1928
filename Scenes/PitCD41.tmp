[gd_scene load_steps=25 format=3 uid="uid://bhyjbkpqxorgv"]

[ext_resource type="Script" path="res://Scripts/BallLauncher.gd" id="1_3hdld"]
[ext_resource type="Script" path="res://Scenes/GoalScore.gd" id="1_et3lr"]
[ext_resource type="Script" path="res://Scenes/Mouse3DGetter.gd" id="3_1h72p"]
[ext_resource type="Script" path="res://Scenes/ShowShotPositionGUI.gd" id="4_11tow"]
[ext_resource type="Script" path="res://Scenes/SetLineCurve.gd" id="4_43uxg"]
[ext_resource type="Script" path="res://Scenes/PathFollow_ball.gd" id="4_x0a8h"]
[ext_resource type="Texture2D" uid="uid://cmdxnicg3cpno" path="res://Sprites/ShotGUI/OutlineEffet.png" id="5_l60s2"]
[ext_resource type="Texture2D" uid="uid://bl034ukpwbfox" path="res://Sprites/ShotGUI/aimCenter_effet.png" id="5_pf73m"]
[ext_resource type="Script" path="res://addons/godot-polyliner/Line3D/LinePath3D.gd" id="6_j2t4y"]

[sub_resource type="BoxShape3D" id="BoxShape3D_uutfu"]
size = Vector3(7.4, 2.44, 2)

[sub_resource type="BoxMesh" id="BoxMesh_djm41"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_2mh0g"]
transparency = 1
vertex_color_use_as_albedo = true
albedo_color = Color(0.0588235, 0.945098, 0.258824, 0.352941)

[sub_resource type="WorldBoundaryShape3D" id="WorldBoundaryShape3D_u4jh5"]

[sub_resource type="PlaneMesh" id="PlaneMesh_c3pjw"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_5jtt6"]
albedo_color = Color(0.109804, 0.215686, 0.133333, 1)

[sub_resource type="Gradient" id="Gradient_otk80"]
colors = PackedColorArray(1, 1, 1, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_kxlbf"]
gradient = SubResource("Gradient_otk80")

[sub_resource type="ViewportTexture" id="ViewportTexture_qbcku"]
viewport_path = NodePath("Node3D/direction_select")

[sub_resource type="BoxShape3D" id="BoxShape3D_kk138"]
size = Vector3(1, 0.1, 1)

[sub_resource type="Curve3D" id="Curve3D_me3c6"]
_data = {
"points": PackedVector3Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0),
"tilts": PackedFloat32Array(0, 0)
}
point_count = 2

[sub_resource type="SphereMesh" id="SphereMesh_wjux8"]
radius = 0.1
height = 0.2

[sub_resource type="Curve3D" id="Curve3D_u4pjn"]

[sub_resource type="Shader" id="Shader_glc77"]
code = "shader_type spatial;
render_mode skip_vertex_transform;
render_mode depth_draw_always;
//render_mode alpha_to_coverage_and_one;

#include \"res://addons/godot-polyliner/shaders/include/polyliner_inc.gdshaderinc\"

uniform float line_width = 0.03;
uniform sampler2D width_curve : source_color;
uniform bool tangent_facing = false;
uniform bool rounded = false;
uniform bool tube_normal = true;

uniform bool uv_matches_width = true;
uniform vec2 tex_scale = vec2(1.0,1.0);

varying float is_end;
void vertex(){
	VERTEX = (MODELVIEW_MATRIX * vec4(VERTEX,1.0)).xyz;
	
	NORMAL = mat3(MODELVIEW_MATRIX) * NORMAL;
	TANGENT = mat3(MODELVIEW_MATRIX) * TANGENT;
	BINORMAL = mat3(MODELVIEW_MATRIX) * BINORMAL;
	
	quick_line(line_width, rounded);
	
	if (uv_matches_width) { UV.x /= line_width; }
	
	
	UV.x = 1.0-UV.x;
	
	float line_length = UV2.x;
	UV2 = UV;
	UV2.x *= line_length;
	
	// correct the texture coordinates at the rounded ends
	// TODO: doesn't take angle of the rounded end into account at all
	if (rounded) {
		// the world may never know
		// why 1.414 is the exact value which fixes the texcoords
		const float SQ2 = sqrt(2.0);
		float uv_correct = -is_end;
		
		if (uv_matches_width) { uv_correct *= line_width*SQ2; } 
		else { uv_correct *= line_width/abs(tex_scale.x); }
//		if (abs(is_end) > 0.001) {
//			float i = acos(dot(TANGENT,normalize(cross(NORMAL,normalize(VERTEX)))));
//			float xe = 1.0/(i*0.5+0.5);
//			uv_correct *= xe*abs(tex_scale.x);
//		}
		UV.x += uv_correct;
		UV2.x += uv_correct;
	}
	
	// godot seems to reapply the modelview transform later
	// we have no choice but to do the inverse transform
	// af1d81d fixes this
	TANGENT =  TANGENT * mat3(MODELVIEW_MATRIX);
	BINORMAL = BINORMAL * mat3(MODELVIEW_MATRIX);
}

uniform sampler2D texture_alb : hint_default_white, source_color;
uniform sampler2D texture_rgh : hint_default_white;
uniform bool tex_stretch = true;

uniform vec4 color : source_color = vec4(vec3(1.0),1.0);
uniform float metallic  : hint_range(0.0,1.0,0.005) = 0.0;
uniform float specular  : hint_range(0.0,1.0,0.005) = 0.5;
uniform float roughness : hint_range(0.0,1.0,0.005) = 0.5;

void fragment() {
	if (!FRONT_FACING) { NORMAL = -NORMAL; }
	
	if (tube_normal && !tangent_facing) { 
		NORMAL_MAP = getLineTubeNormal(UV,is_end,rounded);
	}
	
	if (rounded && abs(is_end) > 0.0001) {
		// pure heuristics
		float softner = magic_aa(6000.0,VERTEX,VIEWPORT_SIZE);
		softner *= (1.0/line_width) * (min(abs(is_end)*2.0,1.0));
		ALPHA *= smoothstep(1.0,1.0+softner,getDistToLineCenter(UV,is_end));
	}
	
	vec2 uv_alb = UV2;
	if (tex_stretch) {
		uv_alb = UV;
	}
	uv_alb *= tex_scale;
	uv_alb = uv_alb.yx; // more intuitive
	
	vec4 alb_sample = texture(texture_alb,uv_alb.yx);
	vec4 rgh_sample = texture(texture_rgh,uv_alb.yx);
	
	ALBEDO = alb_sample.rgb * alb_sample.a * color.rgb;
	SPECULAR = specular;
	ROUGHNESS = roughness * rgh_sample.r;
	METALLIC = metallic;
	
	ALPHA_SCISSOR_THRESHOLD = 0.001; // comment out for alpha blending
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_rbres"]
render_priority = 0
shader = SubResource("Shader_glc77")
shader_parameter/line_width = 0.1
shader_parameter/tangent_facing = false
shader_parameter/rounded = false
shader_parameter/tube_normal = true
shader_parameter/uv_matches_width = true
shader_parameter/tex_scale = Vector2(1, 1)
shader_parameter/tex_stretch = true
shader_parameter/color = Color(1, 1, 1, 1)
shader_parameter/metallic = 0.0
shader_parameter/specular = 0.5
shader_parameter/roughness = 0.5

[node name="Node3D" type="Node3D"]

[node name="GoalStuff" type="Node3D" parent="."]
script = ExtResource("1_et3lr")

[node name="Goal" type="Area3D" parent="GoalStuff"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="GoalStuff/Goal"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.22, 1)
shape = SubResource("BoxShape3D_uutfu")

[node name="MeshInstance3D" type="MeshInstance3D" parent="GoalStuff/Goal/CollisionShape3D"]
transform = Transform3D(7.32, 0, 0, 0, 2.44, 0, 0, 0, 2, 0, 0, 0)
mesh = SubResource("BoxMesh_djm41")
skeleton = NodePath("../..")
surface_material_override/0 = SubResource("StandardMaterial3D_2mh0g")

[node name="Field" type="Node3D" parent="GoalStuff"]

[node name="StaticBody3D" type="StaticBody3D" parent="GoalStuff/Field"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="GoalStuff/Field/StaticBody3D"]
shape = SubResource("WorldBoundaryShape3D_u4jh5")

[node name="MeshInstance3D" type="MeshInstance3D" parent="GoalStuff/Field/StaticBody3D/CollisionShape3D"]
transform = Transform3D(500, 0, 0, 0, 1, 0, 0, 0, 500, 0, 0, 0)
mesh = SubResource("PlaneMesh_c3pjw")
surface_material_override/0 = SubResource("StandardMaterial3D_5jtt6")

[node name="Lines" type="Node3D" parent="GoalStuff/Field"]

[node name="GoalLine" type="Decal" parent="GoalStuff/Field/Lines"]
size = Vector3(60, 2, 0.1)
texture_albedo = SubResource("GradientTexture2D_kxlbf")

[node name="CenterLine" type="Decal" parent="GoalStuff/Field/Lines"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -50)
size = Vector3(60, 2, 0.1)
texture_albedo = SubResource("GradientTexture2D_kxlbf")

[node name="16er" type="Node3D" parent="GoalStuff/Field/Lines"]

[node name="16Line" type="Decal" parent="GoalStuff/Field/Lines/16er"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -16)
size = Vector3(40.1, 2, 0.1)
texture_albedo = SubResource("GradientTexture2D_kxlbf")

[node name="16Line2" type="Decal" parent="GoalStuff/Field/Lines/16er"]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 20, 0, -8)
size = Vector3(16, 2, 0.1)
texture_albedo = SubResource("GradientTexture2D_kxlbf")

[node name="16Line3" type="Decal" parent="GoalStuff/Field/Lines/16er"]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, -20, 0, -8)
size = Vector3(16, 2, 0.1)
texture_albedo = SubResource("GradientTexture2D_kxlbf")

[node name="5er" type="Node3D" parent="GoalStuff/Field/Lines"]

[node name="16Line" type="Decal" parent="GoalStuff/Field/Lines/5er"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -5.5)
size = Vector3(18.1, 2, 0.1)
texture_albedo = SubResource("GradientTexture2D_kxlbf")

[node name="16Line2" type="Decal" parent="GoalStuff/Field/Lines/5er"]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 9, 0, -2.75)
size = Vector3(5.5, 2, 0.1)
texture_albedo = SubResource("GradientTexture2D_kxlbf")

[node name="16Line3" type="Decal" parent="GoalStuff/Field/Lines/5er"]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, -9, 0, -2.75)
size = Vector3(5.5, 2, 0.1)
texture_albedo = SubResource("GradientTexture2D_kxlbf")

[node name="Node3D" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -23.7631)

[node name="BallLauncher" type="Node3D" parent="Node3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.302729, 6.64762)
script = ExtResource("1_3hdld")
my_force = Vector3(0, 0, 10)
my_rot = Vector3(1, 0, 0)

[node name="Effet_Control" type="StaticBody3D" parent="Node3D/BallLauncher"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1.01907, 0.313885, 0)
collision_layer = 2
collision_mask = 2
script = ExtResource("3_1h72p")

[node name="Sprite3D" type="Sprite3D" parent="Node3D/BallLauncher/Effet_Control"]
transform = Transform3D(0.2, 0, 0, 0, 0.2, 0, 0, 0, 0.2, 0, 0, 0)
texture = SubResource("ViewportTexture_qbcku")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Node3D/BallLauncher/Effet_Control"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0)
shape = SubResource("BoxShape3D_kk138")

[node name="Path3D" type="Path3D" parent="Node3D/BallLauncher"]
curve = SubResource("Curve3D_me3c6")
script = ExtResource("4_43uxg")

[node name="PathFollow3D" type="PathFollow3D" parent="Node3D/BallLauncher/Path3D"]
transform = Transform3D(-4.37114e-08, 1, -4.37114e-08, 0, -4.37114e-08, -1, -1, -4.37114e-08, 1.91069e-15, 0, 0, 0)
script = ExtResource("4_x0a8h")
duration = 0.5

[node name="MeshInstance3D" type="MeshInstance3D" parent="Node3D/BallLauncher/Path3D/PathFollow3D"]
mesh = SubResource("SphereMesh_wjux8")

[node name="PathFollow3D2" type="PathFollow3D" parent="Node3D/BallLauncher/Path3D"]
transform = Transform3D(-4.37114e-08, 1, -4.37114e-08, 0, -4.37114e-08, -1, -1, -4.37114e-08, 1.91069e-15, 0, 0, 0)
script = ExtResource("4_x0a8h")
duration = 0.5
offset = 0.5

[node name="MeshInstance3D" type="MeshInstance3D" parent="Node3D/BallLauncher/Path3D/PathFollow3D2"]
mesh = SubResource("SphereMesh_wjux8")

[node name="glow" type="Path3D" parent="Node3D/BallLauncher/Path3D"]
curve = SubResource("Curve3D_u4pjn")
script = ExtResource("6_j2t4y")
curve_mode = 1
iter_min_dist = 0.849
material = SubResource("ShaderMaterial_rbres")

[node name="Camera3D" type="Camera3D" parent="Node3D"]
transform = Transform3D(-1, 0, -8.74228e-08, -2.99806e-08, 0.939358, 0.342938, 8.21213e-08, 0.342938, -0.939358, 0, 1.05975, 4.67625)

[node name="direction_select" type="SubViewport" parent="Node3D"]
disable_3d = true
transparent_bg = true

[node name="Node2D" type="Node2D" parent="Node3D/direction_select"]
position = Vector2(128, 128)
script = ExtResource("4_11tow")

[node name="Control" type="Control" parent="Node3D/direction_select/Node2D"]
custom_minimum_size = Vector2(512, 512)
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="ColorRect" type="ColorRect" parent="Node3D/direction_select/Node2D/Control"]
layout_mode = 0
offset_right = 40.0
offset_bottom = 40.0
color = Color(0.686275, 0.0235294, 1, 1)

[node name="NinePatchRect" type="NinePatchRect" parent="Node3D/direction_select/Node2D/Control"]
custom_minimum_size = Vector2(256, 256)
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -128.0
offset_top = -128.0
offset_right = 128.0
offset_bottom = 128.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("5_l60s2")
patch_margin_left = 4
patch_margin_top = 4
patch_margin_right = 4
patch_margin_bottom = 4

[node name="Sprite2D" type="Sprite2D" parent="Node3D/direction_select/Node2D"]
texture = ExtResource("5_pf73m")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.994151, 0.104071, -0.0288616, 0, 0.267238, 0.96363, 0.107999, 0.957994, -0.265675, 0, 9.0446, 0)

[connection signal="on_have_mouse_pos_rel" from="Node3D/BallLauncher/Effet_Control" to="Node3D/BallLauncher" method="set_position_hit"]
[connection signal="on_have_mouse_pos_rel" from="Node3D/BallLauncher/Effet_Control" to="Node3D/direction_select/Node2D" method="on_set_position"]
